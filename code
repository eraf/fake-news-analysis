library(dplyr)
help("select")
df <- read.csv("fake news/FakeNewsNet.csv")

#data variables and their data types
dplyr::glimpse(df)
names(df)
head(df)


#news_url seems unimportant so let us drop it
df = df %>% 
  dplyr::select(- news_url) %>% 
  mutate(news_credibility = if_else(real == 1, "Real", "Fake"))  # set category names


#missing value pattern
mice::md.pattern(df2)


#distribution of real and fake news
ggplot2::ggplot(data = df) + 
  geom_bar(mapping = aes(news_credibility, fill = news_credibility)) + 
  scale_fill_discrete()


#frequency distribution of fake news
prop.table(table(df$news_credibility))


#fake news are more frequent
df %>% 
  dplyr::select(tweet_num, news_credibility) %>% 
  group_by(news_credibility) %>% 
  summarise(retweets = mean(tweet_num)) %>% 
  ggplot2::ggplot(mapping = aes(news_credibility, retweets, fill = retweets)) + 
  geom_col() +
  labs(
    title = "Fake news are retweeted more often",
    x = "News",
    y = "Number of retweets"
       ) + 
  theme(title=element_text(color='steelblue',size=10)) + 
  scale_fill_gradient(low = 'pink', high = 'red4')

#the news is more likely to be fake if the source is missing
df %>% 
  filter(is.na(source_domain)) %>% 
  ggplot2::ggplot(mapping = aes(x = real)) + 
  geom_bar(fill = c('steelblue')) + 
  labs(title = "The news is more likely to be fake if the source is missing") + 
  theme(title = element_text(color = 'steelblue', size = 10)) + 
  theme_light()

#most popular news sources
df %>% 
  filter(!is.na(source_domain)) %>% 
  group_by(source_domain) %>% 
  summarise(n = n()) %>% 
  arrange(desc(n)) %>% 
  head(6) %>% 
  ggplot(mapping = aes(x = as.factor(source_domain), 
                       fill = n)) +
  geom_col(aes(y = n)) +
  labs(
    title = "Most popular sources of news",
    x = "Source domains",
    y = "Popularity", 
    fill = "Number of articles"
  ) + 
  theme(
    axis.text.x = element_text(angle = 20, size = 7), 
    plot.title = element_text(size = 18)
    ) + 
  scale_fill_gradient(low = 'pink', high = 'red4')

